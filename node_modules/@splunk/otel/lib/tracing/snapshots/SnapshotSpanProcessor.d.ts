import { Context } from '@opentelemetry/api';
import { ReadableSpan, Span } from '@opentelemetry/sdk-trace-base';
import { SpanProcessor } from '@opentelemetry/sdk-trace-base';
export type TraceIdCallback = (traceId: string) => void;
export interface SnapshotSpanProcessorOptions {
    traceSnapshotBegin: TraceIdCallback;
    traceSnapshotEnd: TraceIdCallback;
}
export declare class SnapshotSpanProcessor implements SpanProcessor {
    traceSnapshotBegin: TraceIdCallback;
    traceSnapshotEnd: TraceIdCallback;
    snapshotSpans: Map<string, string>;
    constructor(options: SnapshotSpanProcessorOptions);
    onStart(span: Span, parentContext: Context): void;
    onEnd(span: ReadableSpan): void;
    forceFlush(): Promise<void>;
    shutdown(): Promise<void>;
}
//# sourceMappingURL=SnapshotSpanProcessor.d.ts.map