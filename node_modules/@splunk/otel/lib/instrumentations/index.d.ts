import type { TracingOptions } from '../tracing';
import type { LoggingOptions, StartLoggingOptions } from '../logging';
import type { MetricsOptions } from '../metrics';
import type { ProfilingOptions } from '../profiling';
import type { Options as StartOptions } from '../start';
import type { Instrumentation } from '@opentelemetry/instrumentation';
type InstrumentationInfo = {
    shortName: string;
    create: () => Instrumentation;
};
interface Options {
    tracing: TracingOptions;
    logging: StartLoggingOptions;
}
export declare const bundledInstrumentations: InstrumentationInfo[];
export declare function getInstrumentations(): Instrumentation<import("@opentelemetry/instrumentation").InstrumentationConfig>[];
export declare function configureInstrumentations(options: Options): void;
export declare function parseOptionsAndConfigureInstrumentations(options?: Partial<StartOptions>): {
    tracingOptions: TracingOptions;
    loggingOptions: LoggingOptions;
    profilingOptions: ProfilingOptions;
    metricsOptions: MetricsOptions;
};
export {};
//# sourceMappingURL=index.d.ts.map