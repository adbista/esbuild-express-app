import { DiagLogLevel } from '@opentelemetry/api';
import type { EnvVarKey, LogLevel } from './types';
export type ConfigCache = Map<string, string>;
export declare function findServiceName(cache?: ConfigCache): string | undefined;
export declare function defaultServiceName(cache?: ConfigCache): string;
export declare function getNonEmptyEnvVar(key: EnvVarKey): string | undefined;
export declare function parseEnvBooleanString(value?: string): boolean | undefined;
export declare function getEnvBoolean(key: EnvVarKey, defaultValue?: boolean): boolean;
export declare function getEnvNumber(key: EnvVarKey, defaultValue: number): number;
export declare function deduplicate(arr: string[]): string[];
export declare function getEnvArray(key: EnvVarKey, defaultValue: string[]): string[];
export declare function getEnvValueByPrecedence(keys: EnvVarKey[], defaultValue?: string): string | undefined;
export declare function assertNoExtraneousProperties(obj: Record<string, any>, expectedProps: string[]): void;
export declare function toDiagLogLevel(level: LogLevel): DiagLogLevel;
export declare function parseLogLevel(value: string | undefined): DiagLogLevel;
export declare function ensureResourcePath(url: string | undefined, resourcePath: string): string | undefined;
export declare function listEnvVars(): {
    name: string;
    property: string;
    description: string;
    default: string;
    type: string;
    category: string;
}[];
//# sourceMappingURL=utils.d.ts.map